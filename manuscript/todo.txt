GLobal

	- check through images.
	- Add in images / update images
	- could change all names in paths to be rango:index, rango:about.. seems to be convention
		- oh COOL we do this already.. this book is awesome!!


	- clean data example - change field to a string field.
	
	- in deployment chapter - create a cron job to clearsessions ie. https://docs.djangoproject.com/en/2.0/topics/http/sessions/#clearing-the-session-store
	
	- change order of chapters: user rego then redux? Or combine the two chapters?
	
	- put logging a/b testing chapter after template tags??
	
	

chapter 1

- NEW additions
	- logging
	- postgress
	- class based views... 
	- simple A/B framework?
- link to database and models chapters
- django links and references.. trying to do relative links.. not working tho


chapter 2

	- update python to python 3
	- update pip to pip3
	
	https://gist.github.com/IamAdiSri/a379c36b70044725a85a1216e7ee9a46

#TODO(leifos): 
chapter 3

	- add instruction on entering virtualenv

	- update python to python3

	***NOTE: url has changed to path in URLs.py

	to use regex, need to import re_path

	- update path / regex paragraphs

Any URL string supplied by the user that matches this pattern means that the view `views.index()` will be invoked by Django. You might be thinking that matching a blank URL is pretty pointless - what use would it serve? Remember that when the URL pattern matching takes place, only a portion of the original URL string is considered. This is because Django will first process the URL patterns in the project processing the original URL string (i.e. `rango/`) and strip away the `rango/` part. Django will then pass on an empty string to the Rango app to handle via the URL patterns in `rango/urls.py`. 
The next parameter passed to the `url()` function is the `index` view, which will handle the incoming requests, followed by the optional parameter, `name` that is set to a string `'index'`. 

 creating templates. But do check out [the Official Django documentation on this topic](https://docs.djangoproject.com/en/2.0/topics/http/urls/#naming-url-patterns) for more information.



Chapter 4 - conversion completed.

Chapter 5 - converted


Tests for chapter 4 and 5 regarding the views need to be updated. I think that we can introduce the tests earlier on.
	- added test notes in chapter 4
	- update ch4 and ch5 view tests.. something is wrong with the assertIn
	


We could add a link/reference to #section-hints-class-based-views. after the add_category view is implement to say that people can opt to implement class based views.

Chapter 7
 - max_length exercise not done


chapter 9
- add test to check if password hashwers has been added to the settings.py

- other tests?


chapter 11
	- exercise change password to be done
	
chapter 12
	- update the screen shots
	
chapter 13
	- some tests....chapter13-template-tags.md


chapter 14
	- check where the location of the bing.key should be